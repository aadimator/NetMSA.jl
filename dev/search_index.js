var documenterSearchIndex = {"docs":
[{"location":"#","page":"Home","title":"Home","text":"CurrentModule = NetMSA","category":"page"},{"location":"#NetMSA-1","page":"Home","title":"NetMSA","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [NetMSA]","category":"page"},{"location":"#NetMSA.createPeerMatrix-Tuple{Array{String,1}}","page":"Home","title":"NetMSA.createPeerMatrix","text":"createPeerMatrix(inputStrings::Vector{String})::Matrix{Union{Missing,Char}}\n\nCreate and return a Peer matrix, containing charachters as elements, where each input sequence, provided in the inputStrings, is represented as a column. Missing values are represented in the matrix by the missing keyword.\n\nExamples\n\njulia> createPeerMatrix([\"abcbcdem\", \"acbcfg\", \"abchimn\", \"abcbcjkm\"])\n8×4 Array{Union{Missing, Char},2}:\n 'a'  'a'      'a'      'a'\n 'b'  'c'      'b'      'b'\n 'c'  'b'      'c'      'c'\n 'b'  'c'      'h'      'b'\n 'c'  'f'      'i'      'c'\n 'd'  'g'      'm'      'j'\n 'e'  missing  'n'      'k'\n 'm'  missing  missing  'm'\n\n\n\n\n\n","category":"method"},{"location":"#NetMSA.getposition-Union{Tuple{T}, Tuple{T,Int64,Array{T,2}}} where T","page":"Home","title":"NetMSA.getposition","text":"getposition(value::T, rowindex::Int64, matrix::Matrix{T}) where (T)\n\nReturn the Position (rowindex, [colindex1, colindex2, ...]) of the Particle represented by value, at the rowindex in the matrix.\n\nExamples\n\njulia> M = createPeerMatrix([\"abcbcdem\", \"acbcfg\", \"abchimn\", \"abcbcjkm\"])\n8×4 Array{Union{Missing, Char},2}:\n 'a'  'a'      'a'      'a'\n 'b'  'c'      'b'      'b'\n 'c'  'b'      'c'      'c'\n 'b'  'c'      'h'      'b'\n 'c'  'f'      'i'      'c'\n 'd'  'g'      'm'      'j'\n 'e'  missing  'n'      'k'\n 'm'  missing  missing  'm'\n\n juila> NetMSA.getposition('b', 2, M)\n NetMSA.Position(2, [1, 3, 4])\n\n\n\n\n\n","category":"method"}]
}
